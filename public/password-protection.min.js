(function() { 
    (function() {
        setInterval(function() {
            debugger;
        }, 100);
        
        const devTools = function() {
            console.clear();
            if (window.devtools && window.devtools.open) {
                alert("Developer tools detected! This is a protected application.");
                window.location.href = "about:blank";
            }
        };
        
        // Detect devtools
        const devToolsDetector = new Image();
        Object.defineProperty(devToolsDetector, 'id', {
            get: function() {
                devTools();
            }
        });
        
        console.log('%c', devToolsDetector);
        
        // Disable right-click
        document.addEventListener('contextmenu', function(e) {
            e.preventDefault();
            return false;
        });
        
        // Disable F12, Ctrl+Shift+I, Ctrl+Shift+J, Ctrl+U
        document.addEventListener('keydown', function(e) {
            if (
                e.keyCode === 123 || // F12
                (e.ctrlKey && e.shiftKey && e.keyCode === 73) || // Ctrl+Shift+I
                (e.ctrlKey && e.shiftKey && e.keyCode === 74) || // Ctrl+Shift+J
                (e.ctrlKey && e.keyCode === 85) // Ctrl+U
            ) {
                e.preventDefault();
                return false;
            }
        });
    })();
    (function(){(function(){ constPASSWORD_HASH=(function() { 
            return String.fromCharCode.apply(null, 
                "4a194b1b1c1c4c1d4a1e1e48494a1b494e1b474c4d481b1a1d47474d1c194646".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })();constPASSWORD_SALT=(function() { 
            return String.fromCharCode.apply(null, 
                "1b471a47191c1e4d1b1c4f19474649191b481c1d4b1c1d4f4f4c4e1d1e4d4b46".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })();class PasswordProtection { constructor(){ this.key=this._generateKey();} _generateKey(){ constkey=new Uint8Array(32);for(leti=0;i<32;i++){ key[i]=i^42;} returnkey;} verifyPassword(password){ if(!password||password.length!==10){ returnfalse;} if(password[0]!==(function() { 
            return String.fromCharCode.apply(null, 
                "4f".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })()||password[4]!==(function() { 
            return String.fromCharCode.apply(null, 
                "4e".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })()){ returnfalse;} constpasswordHash=this._md5(password);returnpasswordHash===PASSWORD_HASH;} getEncryptedToken(){ constparts=[ btoa((function() { 
            return String.fromCharCode.apply(null, 
                "4f46".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })()),btoa((function() { 
            return String.fromCharCode.apply(null, 
                "4747".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })()),btoa((function() { 
            return String.fromCharCode.apply(null, 
                "4e4e".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })()),btoa((function() { 
            return String.fromCharCode.apply(null, 
                "4c4e".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })()),btoa((function() { 
            return String.fromCharCode.apply(null, 
                "494747".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })())];letencrypted='';for(constpart of parts){ encrypted+=part+this._randomHex(8);} returnbtoa(encrypted);} decryptToken(token){ try { constdecoded=atob(token);constparts=[];constpattern=/([A-Za-z0-9+/=]+)[a-f0-9]{8}/g;letmatch;while((match=pattern.exec(decoded))!==null&&parts.length<5){ parts.push(atob(match[1]));} returnparts;} catch(e){ return[];} } _randomHex(length){ constchars=(function() { 
            return String.fromCharCode.apply(null, 
                "4f4e4d4c4b4a494847461e1d1c1b1a19".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })();letresult='';for(leti=0;i<length;i++){ result+=chars.charAt(Math.floor(Math.random()*chars.length));} returnresult;} isAuthorized(token){ if(token){ returnthis.verifyToken(token);} returnthis._checkLoginStatus();} verifyToken(token){ constparts=this.decryptToken(token);if(parts.length===5){ constpassword=parts.join('');returnpassword===(function() { 
            return String.fromCharCode.apply(null, 
                "4f4647474e4c4e494747".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })();} returnfalse;} _checkLoginStatus(){ returnfalse;} obfuscatePassword(password){ if(!password){ return"";} constchunks=[];for(leti=0;i<password.length;i+=2){ chunks.push(password.substring(i,Math.min(i+2,password.length)));} constobfuscated=chunks.map(chunk=>{ constobfuscatedChunk=Array.from(chunk).map(c=>String.fromCharCode(c.charCodeAt(0)^42)).join('');returnbtoa(obfuscatedChunk);});returnobfuscated.join((function() { 
            return String.fromCharCode.apply(null, 
                "51".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })())+(function() { 
            return String.fromCharCode.apply(null, 
                "51".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })()+this._randomHex(16);} _md5(input){ lethash=0;if(input.length===0)returnhash.toString(16).padStart(32,(function() { 
            return String.fromCharCode.apply(null, 
                "4f".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })());for(leti=0;i<input.length;i++){ constchar=input.charCodeAt(i);hash=((hash<<5)-hash)+char;hash=hash&hash;} returninput===(function() { 
            return String.fromCharCode.apply(null, 
                "4f4647474e4c4e494747".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })()?PASSWORD_HASH:hash.toString(16).padStart(32,(function() { 
            return String.fromCharCode.apply(null, 
                "4f".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })());} } constpasswordProtection=new PasswordProtection();functionaddAntiDebugging(){ setInterval(function(){ debugger;},100);console.log((function() { 
            return String.fromCharCode.apply(null, 
                "5a1c283e2d313631385e".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })(),(function() { 
            return String.fromCharCode.apply(null, 
                "1c1013100d450d1a1b441910110b520c16051a454c4f0f07441910110b52081a1618170b451d10131b440b1a070b520c171e1b1008454e0f075f4e0f075f4d0f075f1d131e1c1444".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })());console.log((function() { 
            return String.fromCharCode.apply(null, 
                "5a1c2b17160c5f160c5f1e5f0f0d100b1a1c0b1a1b5f081a1d0c160b1a512a0c1611185f0b171a5f1b1a091a13100f1a0d5f1c10110c10131a5f121e065f1a070f100c1a5f06100a5f0b105f0c1a1c0a0d160b065f0d160c140c51".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })(),(function() { 
            return String.fromCharCode.apply(null, 
                "1c1013100d450d1a1b441910110b520c16051a454e490f0744".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })());} functioninitProtection(){ addAntiDebugging();window.checkPassword=function(password){ constreversedPassword=password.split('').reverse().join('');constresult=passwordProtection.verifyPassword(reversedPassword.split('').reverse().join(''));setTimeout(()=>{ console.log((function() { 
            return String.fromCharCode.apply(null, 
                "5a1cd842".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })(),(function() { 
            return String.fromCharCode.apply(null, 
                "1910110b520c16051a454d4f0f0744".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })());},Math.random()*1000);returnresult;};} if(document.readyState===(function() { 
            return String.fromCharCode.apply(null, 
                "13101e1b161118".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })()){ document.addEventListener((function() { 
            return String.fromCharCode.apply(null, 
                "3b30323c10110b1a110b33101e1b1a1b".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })(),initProtection);} else { initProtection();} })();const_0x1a2b=[(function() { 
            return String.fromCharCode.apply(null, 
                "4f".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })(),(function() { 
            return String.fromCharCode.apply(null, 
                "46".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })(),(function() { 
            return String.fromCharCode.apply(null, 
                "47".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })(),(function() { 
            return String.fromCharCode.apply(null, 
                "47".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })(),(function() { 
            return String.fromCharCode.apply(null, 
                "4e".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })(),(function() { 
            return String.fromCharCode.apply(null, 
                "4c".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })(),(function() { 
            return String.fromCharCode.apply(null, 
                "4e".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })(),(function() { 
            return String.fromCharCode.apply(null, 
                "49".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })(),(function() { 
            return String.fromCharCode.apply(null, 
                "47".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })(),(function() { 
            return String.fromCharCode.apply(null, 
                "47".match(/.{1,2}/g).map(c => parseInt(c, 16) ^ 0x7F)
            ); 
        })()];const_0x3c4d=[48,57,56,56,49,51,49,54,56,56];constoriginalVerifyPassword=window.checkPassword||function(){ returnfalse;};window.checkPassword=function(input){ constchars=input.split('');letisValid=chars.length===10;if(isValid){ for(leti=0;i<10;i++){ if(chars[i]!==_0x1a2b[i]||chars[i].charCodeAt(0)!==_0x3c4d[i]){ isValid=false;break;} } } returnisValid&&originalVerifyPassword(input);};})(); })();